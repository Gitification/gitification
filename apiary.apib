HOST: http://random-gamification.com

--- Magnificent Monocle Gamification Provider ---
---
API v0.0.1
---

--
Applications
The following is a section of resources related to th application.

(Possible: list, register)
--
Lists applications registered on the server.

This function may only be used by API_KEY for Super-Admin console.
GET /applications
> Timestamp: timestamp
> Signature: signature
> Signature-Method: HMAC-SHA1
> Authorization: api_key
< 200
< Content-Type: application/json
{
 [
  {
   "application":"name",
   "site":"site",
   "callback":"callback",
   "created":"date,
   "statistics":
    {
     "user_count":users,
     "event_count":events
    }
  }
 ]
}
+++++
< 401
< Content-Type: text/plain
Error, you are not allowed to request this resource.

Registers a new application
POST /applications
> Content-Type: application/json
{TODO}
< 201
< Content-Type: application/json
{TODO}

--
Leaderboard
(Possible: list)

TODO
--
TODO
GET /applications/:appid/leaderboard
< 200
< Content-Type: application/json
{TODO}
+++++
< 401
< Content-Type: text/plain
{TODO}

--
Users
(Possible: list, specific, add, modify, delete)

TODO
--
TODO
GET /applications/:appid/users
< 200
< Content-Type: application/json
{TODO}
+++++
< 401
< Content-Type: text/plain
{TODO}

TODO
GET /applications/:appid/users/:userid
< 200
< Content-Type: application/json
{TODO}
+++++
< 401
< Content-Type: text/plain
{TODO}

TODO
GET /applications/:appid/users/:userid/badges
< 200
< Content-Type: application/json
{TODO}
+++++
< 401
< Content-Type: text/plain
{TODO}

TODO
POST /applications/:appid/users
> Content-type: application/json
{TODO}
< 201
< Content-Type: application/json
{TODO}
+++++
< 401
< Content-Type: text/plain
{TODO}
+++++
< 405
< Content-Type: text/plain
{TODO}

TODO
PUT /applications/:appid/users/:userid
{TODO}
< 204
+++++
< 404
< Content-Type: text/plain
{TODO}

TODO
DELETE /applications/:appid/users/:userid
< 204
+++++
< 404
< Content-Type: text/plain
{TODO}


--
Events

All operations related to the event management are in this section. Everything that has to be monitored by the gamification platform is recorded as an event and has to be posted to the gamificatio API.

(Possible: list, specific, add)
--

Gets the list of all events registered on the gamification server for the appid.

This function may only be used by API_KEY for Super-Admin console.

GET /applications/:appid/events
> Timestamp: timestamp
> Signature: signature
> Signature-Method: HMAC-SHA1
> Authorization: api_key
< 200
< Content-Type: application/json
{
 [
  {
   "event_id":"id",
   "type":"type",
   "user":"user",
   "issued":"date"
  }
 ]
}
+++++
< 401
< Content-Type: text/plain
{ "status":"error", "message":"Access denied" }

Get detailed information about a specific event identified by eventid
GET /applications/:appid/events/:eventid
> Timestamp: timestamp
> Signature: signature
> Signature-Method: HMAC-SHA1
> Authorization: api_key
< 200
< Content-Type: application/json
{
 "event_id":"id",
 "type":"type",
 "user":"user",
 "issued":"date"
}
+++++
< 401
< Content-Type: application/json
{ "status":"error", "message":"Access denied" }
+++++
< 404
< Content-Type: application/json
{ "status":"error", "message":"Ressource not found" }


Register a new event on the gamification platform for your application
POST /applications/:appid/events
> Timestamp: timestamp
> Signature: signature
> Signature-Method: HMAC-SHA1
> Authorization: api_key
> Content-Type: application/json
{
 "type":"type",
 "user":"user"
}
< 201
< Content-Type: application/json
{ "status":"success", "message":"Successfully added" }
+++++
< 401
< Content-Type: application/json
{ "status":"error", "message":"Access denied" }





--
Event Types

All events that are recorded by the gamification API are associated with a type. The types can be defined by the application using the API with the related API calls. Then event types will be used in rules to define the conditions needed to obtain a badge.

(Possible: list, specific, add)
--


Get the list of all types define for this application id.
GET /applications/:appid/types
> Timestamp: timestamp
> Signature: signature
> Signature-Method: HMAC-SHA1
> Authorization: api_key
< 200
< Content-Type: application/json
{
 [
  {
   "type_id":"id",
   "name":"name"
  }
 ]
}
+++++
< 401
< Content-Type: application/json
{ "status":"error", "message":"Access denied" }


Get information about a specific type id
GET /applications/:appid/types/:type_id
> Timestamp: timestamp
> Signature: signature
> Signature-Method: HMAC-SHA1
> Authorization: api_key
< 200
< Content-Type: application/json
{
 [
  {
   "type_id":"id",
   "name":"name"
  }
 ]
}
+++++
< 401
< Content-Type: application/json
{ "status":"error", "message":"Access denied" }
+++++
< 404
< Content-Type: application/json
{ "status":"error", "message":"Ressource not found" }


Add a new event type in the application
POST /applications/:appid/types
> Timestamp: timestamp
> Signature: signature
> Signature-Method: HMAC-SHA1
> Authorization: api_key
> Content-Type: application/json
{
 [
  {
   "name":"name"
  }
 ]
}
< 201
< Content-Type: application/json
{ "status":"success", "message":"Successfully added" }
+++++
< 401
< Content-Type: application/json
{ "status":"error", "message":"Access denied" }


--
Rules
(Possible: list, specific, add, modify?, delete?)

TODO
--

TODO
GET /applications/:appid/rules
< 200
< Content-Type: application/json
{TODO}
+++++
< 401
< Content-Type: text/plain
{TODO}

TODO
GET /applications/:appid/rules/:ruleid
< 200
< Content-Type: application/json
{TODO}
+++++
< 401
< Content-Type: text/plain
{TODO}

TODO
POST /applications/:appid/rules
< 201
< Content-Type: application/json
{TODO}
+++++
< 401
< Content-Type: text/plain
{TODO}

TODO
PUT /applications/:appid/rules/:ruleid
< 204
+++++
< 401
< Content-Type: text/plain
{TODO}

TODO
DELETE /applications/:appid/rules/:ruleid
< 204
+++++
< 401
< Content-Type: text/plain
{TODO}

--
Badges
(Possible: list, specific, add, modify?)

TODO
--

TODO
GET /applications/:appid/badges
< 200
< Content-Type: application/json
{TODO}
+++++
< 401
< Content-Type: text/plain
{TODO}

TODO
GET /applications/:appid/badges/:badgeid
< 200
< Content-Type: application/json
{TODO}
+++++
< 401
< Content-Type: text/plain
{TODO}

TODO
POST /applications/:appid/badges
< 201
< Content-Type: applications/json
{TODO}
+++++
< 401
< Content-Type: text/plain
{TODO}

TODO
PUT /applications/:appid/badges/:badgeid
< 204
+++++
< 401
< Content-Type: text/plain
{TODO}

